{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Compilador de Microsoft (R) Visual C#",
        "version": "4.11.0.0",
        "fileVersion": "4.11.0-3.24460.3 (5649376e)",
        "semanticVersion": "4.11.0",
        "language": "es-MX"
      },
      "results": [
        {
          "ruleId": "S1192",
          "level": "warning",
          "message": "Define a constant instead of using this literal 'Accepted' 4 times.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/neco3/source/repos/RepositorioServidor/BMCServerV2/Server/DataAccess/Repositories/FriendRequestRepository.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 41,
                  "endLine": 31,
                  "endColumn": 51
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/neco3/source/repos/RepositorioServidor/BMCServerV2/Server/DataAccess/Repositories/FriendRequestRepository.cs",
                "region": {
                  "startLine": 57,
                  "startColumn": 120,
                  "endLine": 57,
                  "endColumn": 130
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/neco3/source/repos/RepositorioServidor/BMCServerV2/Server/DataAccess/Repositories/FriendRequestRepository.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 40,
                  "endLine": 100,
                  "endColumn": 50
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/neco3/source/repos/RepositorioServidor/BMCServerV2/Server/DataAccess/Repositories/FriendRequestRepository.cs",
                "region": {
                  "startLine": 182,
                  "startColumn": 44,
                  "endLine": 182,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": null,
              "1": null,
              "2": null
            }
          }
        },
        {
          "ruleId": "S2737",
          "level": "warning",
          "message": "Add logic to this catch clause or eliminate it and rethrow the exception automatically.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/neco3/source/repos/RepositorioServidor/BMCServerV2/Server/DataAccess/Repositories/PlayerRepositoy.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 13,
                  "endLine": 36,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2737",
          "level": "warning",
          "message": "Add logic to this catch clause or eliminate it and rethrow the exception automatically.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/neco3/source/repos/RepositorioServidor/BMCServerV2/Server/DataAccess/Repositories/PlayerRepositoy.cs",
                "region": {
                  "startLine": 54,
                  "startColumn": 13,
                  "endLine": 57,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2737",
          "level": "warning",
          "message": "Add logic to this catch clause or eliminate it and rethrow the exception automatically.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/neco3/source/repos/RepositorioServidor/BMCServerV2/Server/DataAccess/Repositories/PlayerRepositoy.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 13,
                  "endLine": 86,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2737",
          "level": "warning",
          "message": "Add logic to this catch clause or eliminate it and rethrow the exception automatically.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/neco3/source/repos/RepositorioServidor/BMCServerV2/Server/DataAccess/Repositories/PlayerRepositoy.cs",
                "region": {
                  "startLine": 132,
                  "startColumn": 13,
                  "endLine": 135,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "S1192": {
          "id": "S1192",
          "shortDescription": "String literals should not be duplicated",
          "fullDescription": "Duplicated string literals make the process of refactoring complex and error-prone, as any change would need to be propagated on all occurrences.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1192",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2737": {
          "id": "S2737",
          "shortDescription": "\"catch\" clauses should do more than rethrow",
          "fullDescription": "A catch clause that only rethrows the caught exception has the same effect as omitting the catch altogether and letting it bubble up automatically.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2737",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}